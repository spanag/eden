Latest

- Add experimental extension to LEMS: 'VariableRequirement' for CoreNEURON-style POINTERs, which is accessible through the experimental "EdenCustomSetup" file format
- Add experimental file format for direct, per-instance customization of model parameters
- Eliminate LEMS constants from the model's memory footprint
- Add support to keep model files loaded after finishing loading the model. Now EDEN and extensions can access the names of objects, for diagnostics and more!
- Add support for new Apple Silicon Mac's
- Add support for Raspberry Pi and other ARM systems on Linux: `armhf`(32-bit) and `aarch64`(64-bit)
- Fix important typos affecting less common model cases
- Improve Windows compatibility + build environment
- Improve OSX build environment
- Add __version__ and __version_info__ to Python wheels
- Replace 'eden' binary script with console script in Python wheels
- Fix linker issues on OSX wheels
- Fix location of eden executable within the python wheel
- Add support for 'hollow' eden_simulator wheels when EDEN is already installed by other means
- Remove `eden-simulator` dependency on `pyneuroml`, not it only depends on `numpy` and `lxml`
- Move auxiliary 'eden_tools' validation functions to validation scripts

0.2 - 2022-03-25
- Add support for non-uniform distributions of ion channels, as long as they are deterministic (i.e. random() is not used in the distribution formula)
- Add support for the "sao864921383" 'cable' directive in Morphology, which decouples the 3D points of a morphology from the compartments used in simulation. Now the neuron models will automatically run with the same discretisation as with jNML/NEURON.
- Refine the intra-neuron conductance matrix of compartments, by computing the volumetric integral between the midpoints of compartments. The algorithm is now similar to the one used in NEURON.
- Improve simulation accuracy and stability by accounting for "leak" conductance in the Bwd Euler cable equation integrator.
- Improve simulation accuracy and stability by using the 'cnexp' integrator for classic HH rate based ion channel gates.
- The number of threads used is now limited to the number of individual work items in the model, this may boost performance for models with less neurons than available threads.
- Set NDEBUG for the 'release' build configuration, disabling most of assert(). 

0.1 - 2021-09-29
- Add support for Microsoft Windows and Apple macOS
- Add support for absolute paths in NeuroML files. Keep in mind that models referring to absolute paths are not portable.
- Add build target for Python wheels, they are now available on http://pypi.org/project/eden-simulator/
- Improved auto thread selection on Python package
- Use of -lmvec flag for GCC is now a run-time flag, only glibc around 2.23 ~ 2.25 should need it
- Changelog started

0.0 - 2021-06-02
- Initial public release
